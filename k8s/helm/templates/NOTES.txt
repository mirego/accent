{{- $fullname := include "accent.fullname" . -}}
{{- $serviceType := .Values.accent.service.type -}}
{{- $servicePort := .Values.accent.service.port -}}
{{- $isIngressEnabled := .Values.accent.ingress.enabled -}}
{{- $ingressHost := (index .Values.accent.ingress.hosts 0).host -}}
{{- $postgresEnabled := .Values.postgresql.enabled -}}
{{- $postgresServiceName := printf "%s-postgres" $fullname -}}
{{- $postgresPort := .Values.postgresql.service.port -}}

Thank you for installing {{ $fullname }}!

Your release is named '{{ .Release.Name }}' and is installed in the '{{ .Release.Namespace }}' namespace.

{{- if eq $serviceType "ClusterIP" }}

To connect to your {{ $fullname }} application within your cluster:
- Service name: {{ $fullname }}
- Service port: {{ $servicePort }}

Use the following command to find the IP address of your Kubernetes cluster:
kubectl cluster-info
Then, connect to the application using the internal IP and the service port.

{{- else if eq $serviceType "NodePort" }}

To connect to your {{ $fullname }} application from outside the cluster:
- First, find the NodePort assigned to your service:
kubectl get svc --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "accent.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"
- Then, connect using your node's IP address and the above NodePort.

{{- else if eq $serviceType "LoadBalancer" }}
To connect to your {{ $fullname }} application via LoadBalancer:
NOTE: It may take a few minutes for the LoadBalancer IP to be available.
You can watch the status by running:
kubectl get svc --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "accent.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"
Once the LoadBalancer IP is assigned, connect using the IP and the service port.

{{- end }}

{{- if $isIngressEnabled }}
Access your application through Ingress at:
http://{{ $ingressHost }}

{{- end }}

{{- if $postgresEnabled }}
PostgreSQL is enabled for this deployment:
- PostgreSQL Service Name: {{ $postgresServiceName }}
- PostgreSQL Service Port: {{ $postgresPort }}
To connect to your PostgreSQL database within your cluster, use the following command:
kubectl run -it --rm --image=postgres:{{ .Values.postgresql.image.tag }} --restart=Never pg-client -- psql -h {{ $postgresServiceName }} -U {{ .Values.postgresql.username }} -d {{ .Values.postgresql.database }}

{{- end }}

For more information on running {{ $fullname }}, you can follow the documentation available at [your documentation URL here].

Feel free to customize your deployment by modifying the `values.yaml` file and upgrading the Helm release.
